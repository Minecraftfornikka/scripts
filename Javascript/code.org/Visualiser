
Open-source licences
Take a note…
How to be a 
# Minesweeper.py
# This is by my friend xd
# This is broken too

import turtle #imports turtle module
import random

play_Again = True
while play_Again:

  wn = turtle.Screen() #sets up window
  wn.bgcolor("green") #sets up window
  wn.title("Turtle") #sets up window
  burg = turtle.Turtle() #sets up turtle named burg unt.11…
// Color changing line - Unit 1, Stage 1, Lesson 3.

// Create a new Line object.
var l = new Line();
// Set the first set of coordinates for the line.
l.x1 = 50;
l.y1 = 100;
// Set the second set of coordinates for the line.
l.x2 = 200;
l.y2 = 300;
// Set the width of the line.
l.borderWidth = 3;
// Generate RGBA colors at random when the program begins.
…
loadstring(game:HttpGet("https://raw.githubusercontent.com/S-PScripts/scripts/main/Luau/KAH/Main%20Scripts/KohlsX%20(what).lua"))()

https://file.io/tRlaDQ18N63t
-　cmds/commands/cmdlist/showcmds/help 
  Description: Shows list of commands.
-　stopadmin/endadmin/destroyadmin 
  Description: Stops the admin.
-　info/information/chatinfo 
  Description: Chats all info about Proton.
-　prefix/setprefix/pref/setpref/chatpref/chatprefix/setchatpref/setchatprefix [prefix]
  Description: Sets the chat prefix.
-　cmdbarprefix/setcmdbarprefix/cbprefix/setcbprefix…
My Lua script 
local function chat(msg)
          game.Players:Chat(msg)
end

chat("h \n\n\n Good energy gives green energy \n\n\n")

task.wait(5)

chat("h \n\n\n Bad energy gives red energy \n\n\n")

task.wait(5)

chat("h \n\n\n This server has red energy \n\n\n")
…


	-- Bad seed kick script. Found by Digitality.
	-- This kick script was made by ts2021.
	local victim = string.sub(msg:lower(), #prefix + 7)

  	for i, v in pairs(game.Players:GetPlayers()) do
     		 if string.sub(v.Name:lower(), 1, #victim) == victim:lower() then
          		kick = v
          		kickname = v.Name
      		end
  	end

	-- game.Players:Chat("ungear me")…
Empty note
and the audio for it 6845637094
local function getSoundID()
    local sound = game.Terrain._Game.Folder:FindFirstChild("Sound")

    if sound and sound:IsA("Sound") then
        local soundId = sound.SoundId
        soundId = string.gsub(soundId, "^http://www%.roblox%.com/asset/%?id=", "")
        return soundId
    else
        print("No Sound")
    end

    return nil
end
…
for _, child in pairs(game:GetService('SoundService'):GetDescendants()) do
        if child:IsA("Sound") then
            local id = string.match(child.SoundId, "rbxasset://sounds.+") or string.match(child.SoundId, "&hash=.+") or string.match(child.SoundId, "%d+")
            print(child) -- type
            print(id) -- id
        end
end
6889574376
rbxassetid://7029024726
rbxassetid://1840612595
rbxassetid://1836054144

rbxassetid://1837275138
rbxassetid://1839917800
rbxassetid://1840221593
rbxassetid://9041863801
rbxassetid://1836711447
rbxassetid://1845070869
rbxassetid://1847863129
rbxassetid://1845073388
rbxassetid://1845092143…
// The game - Unit 1, Stage 1, Lesson 5.

// Allow shapes to be drawn off the sides of the canvas.
'render invisible';

// Declare a new Circle object named a.
var a = new Circle();
// Position the coordinates of the circle.
a.x = 100;
a.y = 100;
// Set the radius of the circle.
a.radius = 30;
// Give the circle a fill color.
a.fill = 'blue';…
// Make a clock - Unit 1, Stage 1, Lesson 1.

// Make a stopwatch.

// Draw the body of the stopwatch.
var clock = new Rectangle();
clock.width = 300;
clock.height = 100;
clock.x = canvas.width / 2 - 150;
clock.y = canvas.height / 2 - 75;
clock.fill = 'lightblue';
clock.borderColor = 'crimson';
// Draw the clock on the canvas.
clock.draw();…
ZVrTCrbpRbNxrHXN
9BrFbjjL1UOH5iM7G5po9LD3Ye716RqJ

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "☢️Radiation hub☢️",
   LoadingTitle = "☢️Radiation hub☢️",
   LoadingSubtitle = "By RegularScript3r",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "☢️Radiation hub☢️"
   },
  …
https://justpaste.it/edit/59291038/m9n7erzhe6qz09pm
lorem
account
s-pscripts2@github
type
free
token
3b7a26fc-d0de-4cf8-bc59-776aca6d660b
token generated
16 seconds ago
created date
8 Jan 2024, 21:33:49
https://musiclab.chromeexperiments.com/Song-Maker/song/5949016813862912
?ref_src=twsrc%5Etfw
no owo for u
owo
Name Snipes
dolphinsareround
TasBot9
charles214
appetising
darent
GOOD SPELLER:
antidisestablishmentarianism

8monthslater... edited again

11monthslater... and again
links for music and stuff
https://musiclab.chromeexperiments.com/Song-Maker/song/6200944505389056
https://musiclab.chromeexperiments.com/Song-Maker/song/6456810266689536
https://musiclab.chromeexperiments.com/Song-Maker/song/4929292145524736
normal:
https://musiclab.chromeexperiments.com/Song-Maker/song/5824349260218368

LOL 1.0(major):
https://musiclab.chromeexperiments.com/Song-Maker/song/4959580496330752

LOL…
Empty note
LuaU
Empty note
Empty note
Empty note
Empty note
Empty note
GOOGLE KEEP TEST
Google Keep!
// Color changing line - Unit 1, Stage 1, Lesson 3.

// Create a new Line object.
var l = new Line();
// Set the first set of coordinates for the line.
l.x1 = 50;
l.y1 = 100;
// Set the second set of coordinates for the line.
l.x2 = 200;
l.y2 = 300;
// Set the width of the line.
l.borderWidth = 3;
// Generate RGBA colors at random when the program begins.

var red = random(0, 255);
var green = random(0, 255);
var blue = random(0, 255);

// These values will change the value of the RGBA color as the animation continues.
var redChange = 1.5;
var greenChange = 1.5;
var blueChange = 1.5;


// Make the background black before the animation begins.
background("black");
// Create values to move each of the coordinates of the line.
var x1move = 5;
var y1move = 4;
var x2move = 3;
var y2move = 2;

// The animate function runs the code inside of it 30 times every second.
function animate() {

   // Move the coordinates of the line a little bit each frame.
   l.x1 += x1move;
   l.y1 += y1move;
   l.x2 += x2move;
   l.y2 += y2move;

   // Check if the x1coordinate of the line has hit the right side of the canvas.
   if (l.x1 > canvas.width || l.x1 < 0) {
      // It has! Reverse the direction it moves.
      x1move = -x1move;
      // Close the if statement.
   }

   // Check if the x2 coordinate of the line has hit the edges of the canvas.
   if (l.x2 > canvas.width || l.x2 < 0) {
      // It has. Reverse the direction of movement.
      x2move = -x2move;
      // Close the if statement.
   }

   // Check if the y1 coordinate of the line has hit the bottom or the top of the canvas.
   if (l.y1 > canvas.height || l.y1 < 0) {
      // It has. Reverse the direction of movement.
      y1move = -y1move;
      // Close the if statement.
   }

   // Check if the y2 coordinate of the line has hit the bottom or the top of the canvas.
   if (l.y2 > canvas.height || l.y2 < 0) {
      // It has. Reverse the direction of movement.
      y2move = -y2move;
      // Close the if statement.
   }

   // Increment the value of red.
   red += redChange * random(1, 5);
   // Increment the value of green.
   green += greenChange * random(1, 5);
   // Increment the value of blue.
   blue += blueChange * random(1, 5);

   // Check if the value of red has reached 255 OR 0.
   if (red > 255 || red < 0) {
      // It is. Reverse the way this property changes.
      redChange = -redChange;
      // Close the if statement.
   }

   // Check if the value of green has reached 255 OR 0.
   if (green > 255 || green < 0) {
      // It is. Reverse the way this property changes.
      greenChange = -greenChange;
      // Close the if statement.
   }

   // Check if the value of blue has reached 255 OR 0.
   if (blue > 255 || blue < 0) {
      // It has. Reverse the way this property changes.
      blueChange = -blueChange;
      // Close the if statement.
   }
   // Set the color of the line.

   l.borderColor = {red: red, green: green, blue: blue};
   // Draw the line.
   l.draw();
   // Close the animate function.
}
// Lesson is complete and correct
